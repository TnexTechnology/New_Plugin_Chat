<?xml version="1.0" encoding="utf-8"?>
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    package="com.tnex.chat.tnexchat_example"
    android:versionCode="1"
    android:versionName="1.0" >

    <uses-sdk
        android:minSdkVersion="28"
        android:targetSdkVersion="32" />
    <!--
         Flutter needs it to communicate with the running application
         to allow setting breakpoints, to provide hot reload, etc.
    -->
    <uses-permission android:name="android.permission.INTERNET" />
    <uses-permission android:name="android.permission.WAKE_LOCK" />
    <uses-permission android:name="android.permission.RECEIVE_BOOT_COMPLETED" />
    <uses-permission android:name="android.permission.FOREGROUND_SERVICE" />
    <!--
    Required for long polling account synchronisation in background.
    If not present ACTION_REQUEST_IGNORE_BATTERY_OPTIMIZATIONS intent action won't work
    -->
    <uses-permission android:name="android.permission.REQUEST_IGNORE_BATTERY_OPTIMIZATIONS" />
    <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" />
    <uses-permission android:name="android.permission.USE_FINGERPRINT" />
    <uses-permission android:name="android.permission.VIBRATE" /> <!-- TODO Is WRITE_EXTERNAL_STORAGE necessary? -->
    <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE" />
    <uses-permission android:name="android.permission.READ_EXTERNAL_STORAGE" />
    <uses-permission android:name="android.permission.BLUETOOTH" />
    <uses-permission android:name="android.permission.CAMERA" />
    <uses-permission android:name="android.permission.MANAGE_OWN_CALLS" />
    <uses-permission android:name="android.permission.MODIFY_AUDIO_SETTINGS" />
    <uses-permission android:name="android.permission.RECORD_AUDIO" />
    <uses-permission android:name="android.permission.SYSTEM_ALERT_WINDOW" />
    <uses-permission android:name="android.permission.ACCESS_WIFI_STATE" />

    <uses-feature
        android:glEsVersion="0x00020000"
        android:required="true" />
    <uses-feature
        android:name="android.hardware.camera"
        android:required="false" />
    <uses-feature
        android:name="android.hardware.camera.autofocus"
        android:required="false" />

    <uses-permission android:name="android.permission.WRITE_CALENDAR" />
    <uses-permission android:name="android.permission.READ_CALENDAR" />

    <application
        android:name="com.tnex.chat.tnexchat.MatrixApplication"
        android:allowBackup="false"
        android:appComponentFactory="androidx.core.app.CoreComponentFactory"
        android:debuggable="true"
        android:exported="false"
        android:extractNativeLibs="false"
        android:icon="@mipmap/ic_launcher"
        android:label="tnexchat_example"
        android:networkSecurityConfig="@xml/network_security_config"
        android:supportsRtl="true"
        android:testOnly="true"
        android:theme="@style/Theme.Vector.Light" >
        <activity
            android:name="com.tnex.chat.tnexchat_example.MainActivity"
            android:configChanges="orientation|keyboardHidden|keyboard|screenSize|smallestScreenSize|locale|layoutDirection|fontScale|screenLayout|density|uiMode"
            android:exported="true"
            android:hardwareAccelerated="true"
            android:launchMode="singleTop"
            android:windowSoftInputMode="adjustResize" >

            <!--
                 Specifies an Android theme to apply to this Activity as soon as
                 the Android process has started. This theme is visible to the user
                 while the Flutter UI initializes. After that, this theme continues
                 to determine the Window background behind the Flutter UI.
            -->
            <meta-data
                android:name="io.flutter.embedding.android.NormalTheme"
                android:resource="@style/NormalTheme" />
            <!--
                 Displays an Android View that continues showing the launch screen
                 Drawable until Flutter paints its first frame, then this splash
                 screen fades out. A splash screen is useful to avoid any visual
                 gap between the end of Android's launch screen and the painting of
                 Flutter's first frame.
            -->
            <meta-data
                android:name="io.flutter.embedding.android.SplashScreenDrawable"
                android:resource="@drawable/launch_background" />

            <intent-filter>
                <action android:name="android.intent.action.MAIN" />

                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>
        </activity>
        <!--
             Don't delete the meta-data below.
             This is used by the Flutter tool to generate GeneratedPluginRegistrant.java
        -->
        <meta-data
            android:name="flutterEmbedding"
            android:value="2" />

        <receiver
            android:name="com.tnex.matrix.fdroid.receiver.OnApplicationUpgradeOrRebootReceiver"
            android:exported="false" >
            <intent-filter>
                <action android:name="android.intent.action.MY_PACKAGE_REPLACED" />
                <action android:name="android.intent.action.BOOT_COMPLETED" />
            </intent-filter>
        </receiver>
        <receiver
            android:name="com.tnex.matrix.fdroid.receiver.AlarmSyncBroadcastReceiver"
            android:enabled="true"
            android:exported="false" />

        <service
            android:name="com.tnex.matrix.fdroid.service.GuardService"
            android:exported="false" />

        <meta-data
            android:name="android.max_aspect"
            android:value="9.9" />
        <meta-data
            android:name="com.google.android.gms.car.application"
            android:resource="@xml/automotive_app_desc" />

        <activity
            android:name="com.tnex.matrix.app.TestActivity"
            android:exported="false" >
        </activity>
        <activity
            android:name="com.tnex.matrix.app.features.MainActivity"
            android:theme="@style/Theme.Vector.Launcher" /> <!-- Activity alias for the launcher Activity (must be declared after the Activity it targets) -->
        <!-- exported="true" is required to launch application -->
        <activity-alias
            android:name="com.tnex.matrix.features.Alias"
            android:exported="true"
            android:targetActivity="com.tnex.matrix.app.features.MainActivity" >
        </activity-alias>

        <activity android:name="com.tnex.matrix.app.features.home.HomeActivity" />
        <activity
            android:name="com.tnex.matrix.app.features.login.SSORedirectRouterActivity"
            android:exported="true"
            android:theme="@style/Theme.Vector.Black.Transparent" >

            <!-- Add intent filter to handle redirection URL after SSO login in external browser -->
            <intent-filter>
                <action android:name="android.intent.action.VIEW" />

                <category android:name="android.intent.category.DEFAULT" />
                <category android:name="android.intent.category.BROWSABLE" />

                <data
                    android:host="connect"
                    android:scheme="element" />
            </intent-filter>
        </activity>
        <activity
            android:name="com.tnex.matrix.app.features.login.LoginActivity"
            android:launchMode="singleTask"
            android:windowSoftInputMode="adjustResize" />
        <activity
            android:name="com.tnex.matrix.app.features.onboarding.OnboardingActivity"
            android:launchMode="singleTask"
            android:windowSoftInputMode="adjustResize" /> <!-- Add tools:ignore="Instantiatable" for the error reported only by Buildkite :/ -->
        <activity
            android:name="com.tnex.matrix.app.features.media.VectorAttachmentViewerActivity"
            android:theme="@style/Theme.Vector.Black.Transparent" />
        <activity android:name="com.tnex.matrix.app.features.media.BigImageViewerActivity" />
        <activity
            android:name="com.tnex.matrix.app.features.rageshake.BugReportActivity"
            android:label="@string/title_activity_bug_report" />
        <activity
            android:name="com.tnex.matrix.app.features.settings.VectorSettingsActivity"
            android:label="@string/title_activity_settings"
            android:windowSoftInputMode="adjustResize" />
        <activity
            android:name="com.tnex.matrix.app.features.crypto.keysbackup.restore.KeysBackupRestoreActivity"
            android:label="@string/title_activity_keys_backup_setup" />
        <activity
            android:name="com.tnex.matrix.app.features.crypto.keysbackup.setup.KeysBackupSetupActivity"
            android:label="@string/title_activity_keys_backup_restore" />
        <activity
            android:name="com.tnex.matrix.app.features.crypto.keysbackup.settings.KeysBackupManageActivity"
            android:label="@string/encryption_message_recovery" />
        <activity
            android:name="com.tnex.matrix.app.features.reactions.EmojiReactionPickerActivity"
            android:label="@string/title_activity_emoji_reaction_picker" />
        <activity android:name="com.tnex.matrix.app.features.roomdirectory.createroom.CreateRoomActivity" />
        <activity android:name="com.tnex.matrix.app.features.roomdirectory.RoomDirectoryActivity" />
        <activity android:name="com.tnex.matrix.app.features.roomdirectory.roompreview.RoomPreviewActivity" />
        <activity android:name="com.tnex.matrix.app.features.home.room.filtered.FilteredRoomsActivity" />
        <activity
            android:name="com.tnex.matrix.app.features.home.room.detail.RoomDetailActivity"
            android:parentActivityName="com.tnex.matrix.app.features.home.HomeActivity" >
            <meta-data
                android:name="android.support.PARENT_ACTIVITY"
                android:value=".app.features.home.HomeActivity" />
        </activity>
        <activity android:name="com.tnex.matrix.features.debug.DebugMenuActivity" />
        <activity android:name="com.tnex.matrix.app.features.createdirect.CreateDirectRoomActivity" />
        <activity android:name="com.tnex.matrix.app.features.invite.InviteUsersToRoomActivity" />
        <activity android:name="com.tnex.matrix.app.features.webview.VectorWebViewActivity" /> <!-- Activity to intercept links coming from a web instance -->
        <!-- exported="true" is required to handle android.intent.action.VIEW for URL redirection -->
        <activity
            android:name="com.tnex.matrix.app.features.link.LinkHandlerActivity"
            android:enabled="true"
            android:exported="true" >
            <intent-filter>
                <action android:name="android.intent.action.VIEW" />

                <category android:name="android.intent.category.DEFAULT" />
                <category android:name="android.intent.category.BROWSABLE" />

                <data android:scheme="https" />
                <data android:host="riot.im" />
                <data android:host="app.element.io" />
                <data android:host="mobile.element.io" />
                <data android:host="develop.element.io" />
                <data android:host="staging.element.io" />
            </intent-filter>
        </activity> <!-- Activity alias for matrix.to or element permalinks -->
        <!-- exported="true" is required to handle android.intent.action.VIEW for URL redirection -->
        <activity-alias
            android:name="com.tnex.matrix.features.permalink.PermalinkHandlerActivity"
            android:enabled="true"
            android:exported="true"
            android:launchMode="singleTask"
            android:targetActivity="com.tnex.matrix.app.features.link.LinkHandlerActivity" >
            <intent-filter>
                <action android:name="android.intent.action.VIEW" />

                <category android:name="android.intent.category.DEFAULT" />
                <category android:name="android.intent.category.BROWSABLE" />

                <data android:scheme="http" />
                <data android:scheme="https" />
                <data android:host="matrix.to" />
                <data
                    android:host="user"
                    android:scheme="element" />
                <data
                    android:host="room"
                    android:scheme="element" />
            </intent-filter>
        </activity-alias> <!-- exported="true" is required for the share functionality -->
        <activity
            android:name="com.tnex.matrix.app.features.share.IncomingShareActivity"
            android:exported="true"
            android:parentActivityName="com.tnex.matrix.app.features.home.HomeActivity" >
            <meta-data
                android:name="android.support.PARENT_ACTIVITY"
                android:value=".app.features.home.HomeActivity" />

            <intent-filter>
                <action android:name="android.intent.action.SEND" />

                <data android:mimeType="*/*" />

                <category android:name="android.intent.category.DEFAULT" />
                <category android:name="android.intent.category.OPENABLE" />
            </intent-filter>
            <intent-filter>
                <action android:name="android.intent.action.SEND_MULTIPLE" />

                <data android:mimeType="*/*" />

                <category android:name="android.intent.category.DEFAULT" />
                <category android:name="android.intent.category.OPENABLE" />
            </intent-filter>

            <meta-data
                android:name="android.service.chooser.chooser_target_service"
                android:value="androidx.sharetarget.ChooserTargetServiceCompat" />
        </activity>
        <activity android:name="com.tnex.matrix.app.features.roomprofile.RoomProfileActivity" />
        <activity android:name="com.tnex.matrix.app.features.roomprofile.settings.joinrule.RoomJoinRuleActivity" />
        <activity android:name="com.tnex.matrix.app.features.signout.hard.SignedOutActivity" />
        <activity
            android:name="com.tnex.matrix.app.features.signout.soft.SoftLogoutActivity"
            android:windowSoftInputMode="adjustResize" />
        <activity
            android:name="com.tnex.matrix.app.features.roommemberprofile.RoomMemberProfileActivity"
            android:parentActivityName="com.tnex.matrix.app.features.home.HomeActivity" >
            <meta-data
                android:name="android.support.PARENT_ACTIVITY"
                android:value=".app.features.home.HomeActivity" />
        </activity>
        <activity android:name="com.tnex.matrix.app.features.qrcode.QrCodeScannerActivity" />
        <activity android:name="com.tnex.matrix.app.features.crypto.quads.SharedSecureStorageActivity" />
        <activity
            android:name="com.yalantis.ucrop.UCropActivity"
            android:screenOrientation="portrait" />
        <activity
            android:name="com.tnex.matrix.app.features.attachments.preview.AttachmentsPreviewActivity"
            android:theme="@style/Theme.Vector.Black.AttachmentsPreview" />
        <activity
            android:name="com.tnex.matrix.app.features.call.VectorCallActivity"
            android:configChanges="screenSize|smallestScreenSize|screenLayout|orientation"
            android:excludeFromRecents="true"
            android:launchMode="singleTask"
            android:supportsPictureInPicture="true"
            android:taskAffinity=".features.call.VectorCallActivity" /> <!-- PIP Support https://developer.android.com/guide/topics/ui/picture-in-picture -->
        <activity
            android:name="com.tnex.matrix.app.features.call.conference.VectorJitsiActivity"
            android:configChanges="orientation|smallestScreenSize|screenLayout|screenSize"
            android:launchMode="singleTask"
            android:supportsPictureInPicture="true" />
        <activity android:name="com.tnex.matrix.app.features.terms.ReviewTermsActivity" />
        <activity android:name="com.tnex.matrix.app.features.widgets.WidgetActivity" />
        <activity android:name="com.tnex.matrix.app.features.pin.PinActivity" />
        <activity android:name="com.tnex.matrix.app.features.analytics.ui.consent.AnalyticsOptInActivity" />
        <activity android:name="com.tnex.matrix.app.features.home.room.detail.search.SearchActivity" />
        <activity android:name="com.tnex.matrix.app.features.usercode.UserCodeActivity" />
        <activity android:name="com.tnex.matrix.app.features.call.transfer.CallTransferActivity" /> <!-- Single instance is very important for the custom scheme callback -->
        <activity
            android:name="com.tnex.matrix.app.features.auth.ReAuthActivity"
            android:launchMode="singleInstance" >

            <!--
            XXX: UIA SSO has only web fallback, i.e no url redirect, so for now we comment this out
            hopefully, we would use it when finally available
            -->
            <!-- Add intent filter to handle redirection URL after SSO login in external browser -->
            <!-- <intent-filter> -->
            <!-- <action android:name="android.intent.action.VIEW" /> -->


            <!-- <category android:name="android.intent.category.DEFAULT" /> -->
            <!-- <category android:name="android.intent.category.BROWSABLE" /> -->


            <!-- <data -->
            <!-- android:host="reauth" -->
            <!-- android:scheme="element" /> -->
            <!-- </intent-filter> -->
        </activity>
        <activity android:name="com.tnex.matrix.app.features.devtools.RoomDevToolActivity" />
        <activity android:name="com.tnex.matrix.app.features.spaces.SpacePreviewActivity" />
        <activity android:name="com.tnex.matrix.app.features.spaces.SpaceExploreActivity" />
        <activity android:name="com.tnex.matrix.app.features.spaces.SpaceCreationActivity" />
        <activity android:name="com.tnex.matrix.app.features.spaces.manage.SpaceManageActivity" />
        <activity android:name="com.tnex.matrix.app.features.spaces.people.SpacePeopleActivity" />
        <activity android:name="com.tnex.matrix.app.features.spaces.leave.SpaceLeaveAdvancedActivity" />
        <activity android:name="com.tnex.matrix.app.features.poll.create.CreatePollActivity" /> <!-- Services -->
        <service
            android:name="com.tnex.matrix.app.core.services.CallService"
            android:exported="false" >

            <!-- in order to get headset button events -->
            <intent-filter>
                <action android:name="android.intent.action.MEDIA_BUTTON" />
            </intent-filter>
        </service> <!-- Add tools:ignore="Instantiatable" for the error reported only by Buildkite and for lintGplayRelease check :/ -->
        <service
            android:name="com.tnex.matrix.app.core.services.VectorSyncService"
            android:exported="false" />
        <service
            android:name="com.tnex.matrix.app.features.call.telecom.VectorConnectionService"
            android:exported="false"
            android:permission="android.permission.BIND_TELECOM_CONNECTION_SERVICE" >
            <intent-filter>
                <action android:name="android.telecom.ConnectionService" />
            </intent-filter>
        </service> <!-- Receivers -->
        <receiver
            android:name="com.tnex.matrix.app.features.call.service.CallHeadsUpActionReceiver"
            android:exported="false" />
        <receiver
            android:name="com.tnex.matrix.app.features.settings.troubleshoot.TestNotificationReceiver"
            android:exported="false" /> <!-- Exported false, should only be accessible from this app!! -->
        <receiver
            android:name="com.tnex.matrix.app.features.notifications.NotificationBroadcastReceiver"
            android:enabled="true"
            android:exported="false" />
        <!--
        A media button receiver receives and helps translate hardware media playback buttons,
        such as those found on wired and wireless headsets, into the appropriate callbacks in your app.
        -->
        <receiver
            android:name="androidx.media.session.MediaButtonReceiver"
            android:exported="false" >
            <intent-filter>
                <action android:name="android.intent.action.MEDIA_BUTTON" />
            </intent-filter>
        </receiver> <!-- Providers -->
        <!-- Remove WorkManagerInitializer Provider because we are using on-demand initialization of WorkManager -->
        <provider
            android:name="androidx.startup.InitializationProvider"
            android:authorities="com.tnex.chat.tnexchat_example.androidx-startup"
            android:exported="false" >
            <meta-data
                android:name="androidx.lifecycle.ProcessLifecycleInitializer"
                android:value="androidx.startup" />
        </provider>
        <provider
            android:name="androidx.core.content.FileProvider"
            android:authorities="com.tnex.chat.tnexchat_example.fileProvider"
            android:exported="false"
            android:grantUriPermissions="true" >
            <meta-data
                android:name="android.support.FILE_PROVIDER_PATHS"
                android:resource="@xml/sdk_provider_paths" />
        </provider> <!-- multipicker -->
        <provider
            android:name="com.tnex.matrix.app.multipicker.provider.MultiPickerFileProvider"
            android:authorities="com.tnex.chat.tnexchat_example.multipicker.fileprovider"
            android:exported="false"
            android:grantUriPermissions="true" >
            <meta-data
                android:name="android.support.FILE_PROVIDER_PATHS"
                android:resource="@xml/multipicker_provider_paths" />
        </provider>
        <!--
 Temporary fix for Android 12. android:exported has to be explicitly set when targeting Android 12
        Do it for services coming from dependencies - BEGIN
        -->
        <service
            android:name="androidx.sharetarget.ChooserTargetServiceCompat"
            android:exported="false" />

        <uses-library
            android:name="androidx.window.extensions"
            android:required="false" />
        <uses-library
            android:name="androidx.window.sidecar"
            android:required="false" />
        <!--
         The SDK offers a secured File provider to access downloaded files.
         Access to these file will be given via the FileService, with a temporary
         read access permission
        -->
        <provider
            android:name="org.matrix.android.sdk.api.session.file.MatrixSDKFileProvider"
            android:authorities="com.tnex.chat.tnexchat_example.mx-sdk.fileprovider"
            android:exported="false"
            android:grantUriPermissions="true" >
            <meta-data
                android:name="android.support.FILE_PROVIDER_PATHS"
                android:resource="@xml/sdk_provider_paths" />
        </provider>

        <activity android:name="im.dlg.dialer.DialpadActivity" />
        <activity
            android:name="org.jitsi.meet.sdk.JitsiMeetActivity"
            android:configChanges="keyboard|keyboardHidden|orientation|screenLayout|screenSize|smallestScreenSize"
            android:launchMode="singleTask"
            android:resizeableActivity="true"
            android:supportsPictureInPicture="true"
            android:windowSoftInputMode="adjustResize" />
        <activity android:name="com.facebook.react.devsupport.DevSettingsActivity" />

        <service
            android:name="org.jitsi.meet.sdk.ConnectionService"
            android:exported="true"
            android:permission="android.permission.BIND_TELECOM_CONNECTION_SERVICE" >
            <intent-filter>
                <action android:name="android.telecom.ConnectionService" />
            </intent-filter>
        </service>
        <service
            android:name="org.jitsi.meet.sdk.JitsiMeetOngoingConferenceService"
            android:foregroundServiceType="mediaProjection" />

        <provider
            android:name="com.reactnativecommunity.webview.RNCWebViewFileProvider"
            android:authorities="com.tnex.chat.tnexchat_example.fileprovider"
            android:enabled="false"
            android:exported="false"
            android:grantUriPermissions="true" >
            <meta-data
                android:name="android.support.FILE_PROVIDER_PATHS"
                android:resource="@xml/file_provider_paths" />
        </provider>
        <provider
            android:name="com.oblador.performance.StartTimeProvider"
            android:authorities="com.tnex.chat.tnexchat_example.start.time.provider"
            android:exported="false" />

        <meta-data
            android:name="com.bumptech.glide.integration.okhttp3.OkHttpGlideModule"
            android:value="GlideModule" />

        <service
            android:name="androidx.work.impl.background.systemalarm.SystemAlarmService"
            android:directBootAware="false"
            android:enabled="@bool/enable_system_alarm_service_default"
            android:exported="false" />
        <service
            android:name="androidx.work.impl.background.systemjob.SystemJobService"
            android:directBootAware="false"
            android:enabled="@bool/enable_system_job_service_default"
            android:exported="true"
            android:permission="android.permission.BIND_JOB_SERVICE" />
        <service
            android:name="androidx.work.impl.foreground.SystemForegroundService"
            android:directBootAware="false"
            android:enabled="@bool/enable_system_foreground_service_default"
            android:exported="false" />

        <receiver
            android:name="androidx.work.impl.utils.ForceStopRunnable$BroadcastReceiver"
            android:directBootAware="false"
            android:enabled="true"
            android:exported="false" />
        <receiver
            android:name="androidx.work.impl.background.systemalarm.ConstraintProxy$BatteryChargingProxy"
            android:directBootAware="false"
            android:enabled="false"
            android:exported="false" >
            <intent-filter>
                <action android:name="android.intent.action.ACTION_POWER_CONNECTED" />
                <action android:name="android.intent.action.ACTION_POWER_DISCONNECTED" />
            </intent-filter>
        </receiver>
        <receiver
            android:name="androidx.work.impl.background.systemalarm.ConstraintProxy$BatteryNotLowProxy"
            android:directBootAware="false"
            android:enabled="false"
            android:exported="false" >
            <intent-filter>
                <action android:name="android.intent.action.BATTERY_OKAY" />
                <action android:name="android.intent.action.BATTERY_LOW" />
            </intent-filter>
        </receiver>
        <receiver
            android:name="androidx.work.impl.background.systemalarm.ConstraintProxy$StorageNotLowProxy"
            android:directBootAware="false"
            android:enabled="false"
            android:exported="false" >
            <intent-filter>
                <action android:name="android.intent.action.DEVICE_STORAGE_LOW" />
                <action android:name="android.intent.action.DEVICE_STORAGE_OK" />
            </intent-filter>
        </receiver>
        <receiver
            android:name="androidx.work.impl.background.systemalarm.ConstraintProxy$NetworkStateProxy"
            android:directBootAware="false"
            android:enabled="false"
            android:exported="false" >
            <intent-filter>
                <action android:name="android.net.conn.CONNECTIVITY_CHANGE" />
            </intent-filter>
        </receiver>
        <receiver
            android:name="androidx.work.impl.background.systemalarm.RescheduleReceiver"
            android:directBootAware="false"
            android:enabled="false"
            android:exported="false" >
            <intent-filter>
                <action android:name="android.intent.action.BOOT_COMPLETED" />
                <action android:name="android.intent.action.TIME_SET" />
                <action android:name="android.intent.action.TIMEZONE_CHANGED" />
            </intent-filter>
        </receiver>
        <receiver
            android:name="androidx.work.impl.background.systemalarm.ConstraintProxyUpdateReceiver"
            android:directBootAware="false"
            android:enabled="@bool/enable_system_alarm_service_default"
            android:exported="false" >
            <intent-filter>
                <action android:name="androidx.work.impl.background.systemalarm.UpdateProxies" />
            </intent-filter>
        </receiver>
        <receiver
            android:name="androidx.work.impl.diagnostics.DiagnosticsReceiver"
            android:directBootAware="false"
            android:enabled="true"
            android:exported="true"
            android:permission="android.permission.DUMP" >
            <intent-filter>
                <action android:name="androidx.work.diagnostics.REQUEST_DIAGNOSTICS" />
            </intent-filter>
        </receiver>

        <provider
            android:name="ru.noties.jlatexmath.JLatexMathInitProvider"
            android:authorities="com.tnex.chat.tnexchat_example.jlatexmathinitprovider"
            android:exported="false" />

        <service
            android:name="androidx.room.MultiInstanceInvalidationService"
            android:directBootAware="true"
            android:exported="false" />
    </application>

</manifest>